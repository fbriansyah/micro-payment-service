// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: request_log.sql

package postgresdb

import (
	"context"

	"github.com/google/uuid"
)

const createRequestLog = `-- name: CreateRequestLog :one
INSERT INTO request_logs 
(mode, product, bill_number, name, total_amount, biller_response, outlet)
VALUES ($1, $2, $3, $4, $5, $6, $7)
RETURNING id, mode, product, bill_number, name, total_amount, biller_response, outlet, created_at
`

type CreateRequestLogParams struct {
	Mode           string    `json:"mode"`
	Product        string    `json:"product"`
	BillNumber     string    `json:"bill_number"`
	Name           string    `json:"name"`
	TotalAmount    int64     `json:"total_amount"`
	BillerResponse string    `json:"biller_response"`
	Outlet         uuid.UUID `json:"outlet"`
}

func (q *Queries) CreateRequestLog(ctx context.Context, arg CreateRequestLogParams) (RequestLog, error) {
	row := q.db.QueryRowContext(ctx, createRequestLog,
		arg.Mode,
		arg.Product,
		arg.BillNumber,
		arg.Name,
		arg.TotalAmount,
		arg.BillerResponse,
		arg.Outlet,
	)
	var i RequestLog
	err := row.Scan(
		&i.ID,
		&i.Mode,
		&i.Product,
		&i.BillNumber,
		&i.Name,
		&i.TotalAmount,
		&i.BillerResponse,
		&i.Outlet,
		&i.CreatedAt,
	)
	return i, err
}

const getRequestLogByID = `-- name: GetRequestLogByID :one
SELECT id, mode, product, bill_number, name, total_amount, biller_response, outlet, created_at FROM request_logs
WHERE
    id = $1
LIMIT 1
`

func (q *Queries) GetRequestLogByID(ctx context.Context, id uuid.UUID) (RequestLog, error) {
	row := q.db.QueryRowContext(ctx, getRequestLogByID, id)
	var i RequestLog
	err := row.Scan(
		&i.ID,
		&i.Mode,
		&i.Product,
		&i.BillNumber,
		&i.Name,
		&i.TotalAmount,
		&i.BillerResponse,
		&i.Outlet,
		&i.CreatedAt,
	)
	return i, err
}
